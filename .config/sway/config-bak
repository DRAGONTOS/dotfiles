
# Config for sway
#
# Read `man 5 sway` for a complete reference.

# user config directory

# only enable this if every app you use is compatible with wayland
# xwayland disable
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu bemenu-run --fn 'JetBrains Mono 10' -c -B 3 -R 9 -f -n -M 500 -l 15 --bdr '##8311DB' --hb '##8311DB' --nb '##292929' --ab '##292929' --fb '##292929' --hf '##FAF9F9' --tb '##8311DB' --tf '##FAF9F9'


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#output * bg $HOME/.config/garuda/garuda-wallpapers/src/garuda-wallpapers/Animated.png fill


#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    set $powermenu nwgbar
    bindsym $mod+Shift+e exec $powermenu

#
# Moving around:
#
    # Move your focus around
   #bindsym $mod+$left focus left
   #bindsym $mod+$down focus down
   #bindsym $mod+$up focus up
   #bindsym $mod+$right focus right
   # Or use $mod+[up|down|left|right]
   bindsym $mod+Left focus left
   bindsym $mod+Down focus down
   bindsym $mod+Up focus up
   bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:

    # icons can be found at the nerd fonts cheatsheet https://www.nerdfonts.com/cheat-sheet
    # Switch to workspace
    bindsym $mod+1 workspace number 1 
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
     workspace number 0
    
    bindsym $mod+alt+1 workspace number 11
    ##bindsym $mod+3 workspace number 3
    #bindsym $mod+4 workspace number 4
    #bindsym $mod+5 workspace number 5
    #bindsym $mod+6 workspace number 6
    #bindsym $mod+7 workspace number 7
    #bindsym $mod+8 workspace number 8
    #bindsym $mod+9 workspace number 9
    #bindsym $mod+0 workspace ï‰©

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

  # Change focus between workspaces
unbindcode $mod+1
unbindcode $mod+2
unbindcode $mod+3
unbindcode $mod+4
unbindcode $mod+5
unbindcode $mod+6
unbindcode $mod+7
unbindcode $mod+8
unbindcode $mod+9
unbindcode $mod+0
bindcode $mod+1 exec "swaysome focus 1"
bindcode $mod+2 exec "swaysome focus 2"
bindcode $mod+3 exec "swaysome focus 3"
bindcode $mod+4 exec "swaysome focus 4"
bindcode $mod+5 exec "swaysome focus 5"
bindcode $mod+6 exec "swaysome focus 6"
bindcode $mod+7 exec "swaysome focus 7"
bindcode $mod+8 exec "swaysome focus 8"
bindcode $mod+9 exec "swaysome focus 9"
bindcode $mod+0 exec "swaysome focus 0"

# Move containers between workspaces
unbindcode $mod+Shift+1
unbindcode $mod+Shift+2
unbindcode $mod+Shift+3
unbindcode $mod+Shift+4
unbindcode $mod+Shift+5
unbindcode $mod+Shift+6
unbindcode $mod+Shift+7
unbindcode $mod+Shift+8
unbindcode $mod+Shift+9
unbindcode $mod+Shift+0
bindcode $mod+Shift+1 exec "swaysome move 1"
bindcode $mod+Shift+2 exec "swaysome move 2"
bindcode $mod+Shift+3 exec "swaysome move 3"
bindcode $mod+Shift+4 exec "swaysome move 4"
bindcode $mod+Shift+5 exec "swaysome move 5"
bindcode $mod+Shift+6 exec "swaysome move 6"
bindcode $mod+Shift+7 exec "swaysome move 7"
bindcode $mod+Shift+8 exec "swaysome move 8"
bindcode $mod+Shift+9 exec "swaysome move 9"
bindcode $mod+Shift+0 exec "swaysome move 0"

# Focus workspace groups
unbindcode $mod+Ctrl+1
unbindcode $mod+Ctrl+2
unbindcode $mod+Ctrl+3
unbindcode $mod+Ctrl+4
unbindcode $mod+Ctrl+5
unbindcode $mod+Ctrl+6
unbindcode $mod+Ctrl+7
unbindcode $mod+Ctrl+8
unbindcode $mod+Ctrl+9
unbindcode $mod+Ctrl+0
bindcode $mod+Ctrl+1 exec "swaysome focus-group 1"
bindcode $mod+Ctrl+2 exec "swaysome focus-group 2"
bindcode $mod+Ctrl+3 exec "swaysome focus-group 3"
bindcode $mod+Ctrl+4 exec "swaysome focus-group 4"
bindcode $mod+Ctrl+5 exec "swaysome focus-group 5"
bindcode $mod+Ctrl+6 exec "swaysome focus-group 6"
bindcode $mod+Ctrl+7 exec "swaysome focus-group 7"
bindcode $mod+Ctrl+8 exec "swaysome focus-group 8"
bindcode $mod+Ctrl+9 exec "swaysome focus-group 9"
bindcode $mod+Ctrl+0 exec "swaysome focus-group 0"

# Move containers to other workspace groups
unbindcode $mod+Ctrl+Shift+1
unbindcode $mod+Ctrl+Shift+2
unbindcode $mod+Ctrl+Shift+3
unbindcode $mod+Ctrl+Shift+4
unbindcode $mod+Ctrl+Shift+5
unbindcode $mod+Ctrl+Shift+6
unbindcode $mod+Ctrl+Shift+7
unbindcode $mod+Ctrl+Shift+8
unbindcode $mod+Ctrl+Shift+9
unbindcode $mod+Ctrl+Shift+0
bindcode $mod+Ctrl+Shift+1 exec "swaysome move-to-group 1"
bindcode $mod+Ctrl+Shift+2 exec "swaysome move-to-group 2"
bindcode $mod+Ctrl+Shift+3 exec "swaysome move-to-group 3"
bindcode $mod+Ctrl+Shift+4 exec "swaysome move-to-group 4"
bindcode $mod+Ctrl+Shift+5 exec "swaysome move-to-group 5"
bindcode $mod+Ctrl+Shift+6 exec "swaysome move-to-group 6"
bindcode $mod+Ctrl+Shift+7 exec "swaysome move-to-group 7"
bindcode $mod+Ctrl+Shift+8 exec "swaysome move-to-group 8"
bindcode $mod+Ctrl+Shift+9 exec "swaysome move-to-group 9"
bindcode $mod+Ctrl+Shift+0 exec "swaysome move-to-group 0"

# Move focused container to next output
bindcode $mod+o exec "swaysome next-output"

# Move focused container to previous output
bindcode $mod+Shift+o exec "swaysome prev-output"

# Init workspaces for every screen
exec "swaysome init 1"



# Layout stuff:

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:

mode "resize" {
   # left will shrink the containers width
   # right will grow the containers width
   # up will shrink the containers height
   # down will grow the containers height
   #bindsym $left resize shrink width 10px
   #bindsym $down resize grow height 10px
   #bindsym $up resize shrink height 10px
   #bindsym $right resize grow width 10px

   # Ditto, with arrow keys
   bindsym Left resize shrink width 10px
   bindsym Down resize grow height 10px
   bindsym Up resize shrink height 10px
   bindsym Right resize grow width 10px

   # Return to default mode
   bindsym Return mode "default"
   bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Resize floating windows with mouse scroll:
bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt


#
# Volume
#
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob

#
# Player
#
   bindsym XF86AudioPlay exec playerctl play
   bindsym XF86AudioPause exec playerctl pause
   bindsym XF86AudioNext exec playerctl next
   bindsym XF86AudioPrev exec playerctl previous
#
# Backlight
#
   bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
   bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
#
# App shortcuts
#
   #bindsym $mod+o exec /usr/bin/google-chrome-stable

   bindsym $mod+b exec firefox
#
# Screenshots
#
   #bindsym print exec /usr/share/sway/scripts/grimshot --notify save output
   bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh
   bindsym Alt+print exec /usr/share/sway/scripts/grimshot --notify copy area

# DONT SHOW THIS BAR FOR GARUDA SWAY
# Status Bar:

# Read `man 5 sway-bar` for more information about this section.
 bar {
    position top

#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
 }


include $HOME/.config/sway/config.d/*


output HDMI-A-1 mode 1920x1080@74.973Hz position 0,0

#exec wlsunset -l 50 -L 14
exec wlsunset -t 3000

bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev


for_window [app_id="flameshot"] floating enable, fullscreen disable, move absolute position 0 0, border pixel 0

bindsym print exec flameshot gui


